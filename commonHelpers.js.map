{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24; // Remaining days\n\n  const days = Math.floor(ms / day); // Remaining hours\n  const hours = Math.floor((ms % day) / hour); // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute); // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst refs = {\n  days: document.querySelector('.value[data-days]'),\n  timer: document.querySelector('.timer'),\n  hours: document.querySelector('.value[data-hours]'),\n  minutes: document.querySelector('.value[data-minutes]'),\n  seconds: document.querySelector('.value[data-seconds]'),\n  startBtn: document.querySelector('button[data-start]'),\n  picker: document.getElementById('datetime-picker'),\n};\n\nrefs.startBtn.disabled = true;\n\nrefs.startBtn.addEventListener('click', onStartButtonClick);\n\n\nfunction insertDataToControls(dateObj) {\n  if (dateObj) {\n    const { days, hours, minutes, seconds } = dateObj;\n    if (String(days).length > 3) {\n      refs.timer.classList.add('timer-shift');\n    }\n    refs.days.textContent =  String(days).padStart(2, \"0\");;\n    refs.hours.textContent =  String(hours).padStart(2, \"0\");\n    refs.minutes.textContent =  String(minutes).padStart(2, \"0\");\n    refs.seconds.textContent =  String(seconds).padStart(2, \"0\");\n  } else {\n    refs.timer.classList.remove('timer-shift');\n    refs.days.textContent = '00';\n    refs.hours.textContent = '00';\n    refs.minutes.textContent = '00';\n    refs.seconds.textContent = '00';\n  }\n}\n\n\nconst flatPickrOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = new Date(selectedDates[0]);\n    if (date - new Date() > 0) {\n      userSelectedDate = date;\n      refs.startBtn.disabled = false;\n    } else {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        messageColor: '#fafafb',\n        backgroundColor: '#fc5a5a',\n      });\n    }\n  },\n};\nconst instflatpickr = flatpickr('input#datetime-picker', flatPickrOptions);\n\n\nlet userSelectedDate = null;\nconst interval = 1000;\nlet intervalId;\n\nfunction onStartButtonClick() {\n  updateTimer();\n  intervalId = setInterval(updateTimer, interval);\n  changeControlsStatus();\n}\n\nfunction updateTimer() {\n  if (!userSelectedDate) return;\n\n  const restTime = userSelectedDate - new Date();\n  if (restTime <= 0) {\n    resetTimer();\n    return;\n  }\n  const formattedValues = convertMs(restTime);\n  insertDataToControls(formattedValues);\n}\n\nfunction resetTimer() {\n  userSelectedDate = new Date();\n  intervalId && clearInterval(intervalId);\n  intervalId = null;\n  instflatpickr.setDate(new Date());\n  insertDataToControls();\n  refs.startBtn.disabled = true;\n  refs.stopBtn.disabled = true;\n  refs.picker.disabled = false;\n}\n\nfunction changeControlsStatus() {\n  refs.startBtn.disabled = !refs.startBtn.disabled;\n  refs.picker.disabled = !refs.picker.disabled;\n  \n}\n"],"names":["convertMs","ms","days","hours","minutes","seconds","refs","onStartButtonClick","insertDataToControls","dateObj","flatPickrOptions","selectedDates","date","userSelectedDate","iziToast","instflatpickr","flatpickr","interval","intervalId","updateTimer","changeControlsStatus","restTime","resetTimer","formattedValues"],"mappings":"2GAMA,SAASA,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,MAAMM,EAAO,CACX,KAAM,SAAS,cAAc,mBAAmB,EAChD,MAAO,SAAS,cAAc,QAAQ,EACtC,MAAO,SAAS,cAAc,oBAAoB,EAClD,QAAS,SAAS,cAAc,sBAAsB,EACtD,QAAS,SAAS,cAAc,sBAAsB,EACtD,SAAU,SAAS,cAAc,oBAAoB,EACrD,OAAQ,SAAS,eAAe,iBAAiB,CACnD,EAEAA,EAAK,SAAS,SAAW,GAEzBA,EAAK,SAAS,iBAAiB,QAASC,CAAkB,EAG1D,SAASC,EAAqBC,EAAS,CACrC,GAAIA,EAAS,CACX,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKI,EACtC,OAAOP,CAAI,EAAE,OAAS,GACxBI,EAAK,MAAM,UAAU,IAAI,aAAa,EAExCA,EAAK,KAAK,YAAe,OAAOJ,CAAI,EAAE,SAAS,EAAG,GAAG,EACrDI,EAAK,MAAM,YAAe,OAAOH,CAAK,EAAE,SAAS,EAAG,GAAG,EACvDG,EAAK,QAAQ,YAAe,OAAOF,CAAO,EAAE,SAAS,EAAG,GAAG,EAC3DE,EAAK,QAAQ,YAAe,OAAOD,CAAO,EAAE,SAAS,EAAG,GAAG,CAC/D,MACIC,EAAK,MAAM,UAAU,OAAO,aAAa,EACzCA,EAAK,KAAK,YAAc,KACxBA,EAAK,MAAM,YAAc,KACzBA,EAAK,QAAQ,YAAc,KAC3BA,EAAK,QAAQ,YAAc,IAE/B,CAGA,MAAMI,EAAmB,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAO,IAAI,KAAKD,EAAc,EAAE,EAClCC,EAAO,IAAI,KAAS,GACtBC,EAAmBD,EACnBN,EAAK,SAAS,SAAW,IAEzBQ,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,WACV,aAAc,UACd,gBAAiB,SACzB,CAAO,CAEJ,CACH,EACMC,EAAgBC,EAAU,wBAAyBN,CAAgB,EAGzE,IAAIG,EAAmB,KACvB,MAAMI,EAAW,IACjB,IAAIC,EAEJ,SAASX,GAAqB,CAC5BY,IACAD,EAAa,YAAYC,EAAaF,CAAQ,EAC9CG,GACF,CAEA,SAASD,GAAc,CACrB,GAAI,CAACN,EAAkB,OAEvB,MAAMQ,EAAWR,EAAmB,IAAI,KACxC,GAAIQ,GAAY,EAAG,CACjBC,IACA,MACD,CACD,MAAMC,EAAkBvB,EAAUqB,CAAQ,EAC1Cb,EAAqBe,CAAe,CACtC,CAEA,SAASD,GAAa,CACpBT,EAAmB,IAAI,KACvBK,GAAc,cAAcA,CAAU,EACtCA,EAAa,KACbH,EAAc,QAAQ,IAAI,IAAM,EAChCP,IACAF,EAAK,SAAS,SAAW,GACzBA,EAAK,QAAQ,SAAW,GACxBA,EAAK,OAAO,SAAW,EACzB,CAEA,SAASc,GAAuB,CAC9Bd,EAAK,SAAS,SAAW,CAACA,EAAK,SAAS,SACxCA,EAAK,OAAO,SAAW,CAACA,EAAK,OAAO,QAEtC"}